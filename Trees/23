# Unique Binary Search Trees II


class Solution {
public:
vector<TreeNode*> solve(int start,int end){
    if(start >  end) return {NULL};
    if(start == end) return {new TreeNode(start)};
    vector<TreeNode*> ans;
    for(int i=start;i<=end;i++){
        vector<TreeNode*> left = solve(start,i-1);
        vector<TreeNode*> right = solve(i+1,end);
        for(auto l:left){
            for(auto r:right){
                TreeNode* root=new TreeNode(i);
                root->left = l;
                root->right = r;
                ans.push_back(root);
            }
        }

    }
    return ans;
}
    vector<TreeNode*> generateTrees(int n) {
        return solve(1,n);
    }
};
