# Min distance between two given nodes of a Binary Tree


class Solution{
    public:
    /* Should return minimum distance between a and b
    in a tree with given root*/
    Node* lcaFind(Node* root,int a,int b){
        if(root==NULL) return NULL;
        if(root->data == a|| root->data == b) return root;
        Node* leftAns= lcaFind(root->left,a,b);
        Node* rightAns= lcaFind(root->right,a,b);
        if(leftAns!=NULL && rightAns != NULL) return root;
        else if(leftAns!=NULL && rightAns == NULL) return leftAns;
        else if(leftAns==NULL && rightAns != NULL) return rightAns;
        else return NULL;
    }
    int distance(Node* root,int a,int level){
        if(root==NULL) return -1;
        if(root->data == a) return level;
        return max(distance(root->left,a,level+1),distance(root->right,a,level+1));
    }
    int findDist(Node* root, int a, int b) {
        // Your code here
        Node* lca = lcaFind(root,a,b);
        int d1 = distance(lca,a,0);
        int d2 = distance(lca,b,0);
        return d1+d2;
        
    }
};
