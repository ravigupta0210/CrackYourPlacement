# Merge k Sorted Lists

 class compare{
     public:
     bool operator()(ListNode* a,ListNode* b){
         return a->val > b->val;
     }
 };
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*,vector<ListNode*>,compare> minHeap;
        int k=lists.size();
        for(int i=0;i<k;i++){
            if(lists[i] != NULL) minHeap.push(lists[i]);
        }
        ListNode* head = NULL,*tail=NULL;
        while(minHeap.size() > 0){
            ListNode* top = minHeap.top();
            minHeap.pop();
            if(top->next) minHeap.push(top->next);
            if(head == NULL){
                head=top;
                tail=top;
            }
            else{
                tail->next=top;
                tail = top;
            }
        }
        return head;
    }
};
